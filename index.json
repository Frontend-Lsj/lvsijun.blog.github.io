[{"content":"一、git 下载安装与检测是否安装成功 1、git 官网官网地址，这边提醒您官网是外网下载速度极慢。 所以我推荐阿里的下载地址，版本有特别多，那就随机抽取一个幸运的安装包吧！ 1、下载完成点击安装，一路 next 无脑操作就行。 2、安装完成后输入Win + R打开命令窗口，输入git version后如下方显示则安装成功。 1 2 C:\\Users\\lvsj\u0026gt;git version git version 2.30.1.windows.1 二、git 命令常用操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 1、git 常用命令 查看状态 git status 增加文件 git add \u0026#39;text.html\u0026#39; 提交到暂存区 git commit -m \u0026#39;测试提交\u0026#39; 查看所有分支 git branch -a 查看当前使用分支 git branch(结果列表中前面标*号的表示当前使用分支) 切换分支 git checkout 分支名 查看版本号 git log --pretty=oneline 切换版本 git reset --hard 134b(版本号) 查看每一次命令 git reflog 查看分支图 git log --graph 删除文件 git rm text.vue 删除文件夹 git rm -r text.vue 强拉代码 git fetch --all git reset --hard origin/master git pull 将提交推送到另一分支 git push origin master:dev 拉取代码： C:\\Users\\Administrator\u0026gt;git config --global user.name \u0026#34;lvsijun\u0026#34; C:\\Users\\Administrator\u0026gt;git config --global user.email \u0026#34;1369573083@qq.com\u0026#34; 生成ssh密匙： ssh-keygen -t rsa -C \u0026#34;1369573083@qq.com\u0026#34; 密匙文件目录：C:\\Users\\Administrator\\.ssh\\ 的id_rsa.pub文件 3、如何将代码上传到自己的git上 (1).初始化本地仓库 git init (2).查看文件状态 git status (3).添加文件 git add . (4).删除文件 git rm -r xxx文件名 (5).提交文件到本地仓库 git commit -m \u0026#34;您需要填写的备注\u0026#34; (6).推送到远端git地址 git push （如果是第一次提交代码看第7条） (7).如果是第一次提交的话看这里: I、更改路径 git remote add origin git@github.com:xxxxxxx/test.git II、推送 git push -u origin master (8).忽略文件改动不进行提交 命令：git update-index --assume-unchanged 文件名 作用：忽略文件的改动，但是不加入.gitignore 文件中，这样可以达到仅在本地目录中忽略，不影响其他团队成员的工作。 命令：git update-index --no-assume-unchanged 文件名 作用：上一个命令的逆操作，重新追踪文件改动。 ","permalink":"https://bablvsj.github.io/posts/blog/2023/001-gitinstall/","summary":"一、git 下载安装与检测是否安装成功 1、git 官网官网地址，这边提醒您官网是外网下载速度极慢。 所以我推荐阿里的下载地址，版本有特别多，那就随","title":"git安装/常用命令"},{"content":"1. 基础环境搭建 安装 git 从 github 拉取/推送代码 安装 hugo 在 v 站看到子舒的个人网站，觉得简约大气，开始了解到 hugo。\n2. Hugo 网站生成 3. GitPage 部署个人网页 4. GitActions 自动化部署 ","permalink":"https://bablvsj.github.io/posts/life/nini/","summary":"1. 基础环境搭建 安装 git 从 github 拉取/推送代码 安装 hugo 在 v 站看到子舒的个人网站，觉得简约大气，开始了解到 hugo。 2. Hugo 网站生成 3. GitPage 部署个人网页 4. GitActions 自动","title":"本站创建历程"},{"content":"Vue3 常用传参方式 父子组件 props 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 //父组件 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;ChildrenVue :msg=\u0026#39;msg\u0026#39; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup \u0026gt; import ChildrenVue from \u0026#39;../components/Children.vue\u0026#39;; import { ref } from \u0026#39;vue\u0026#39; const msg = ref(\u0026#39;哈喽哈喽\u0026#39;) } \u0026lt;/script //子组件 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;h1\u0026gt; {{msg}}\u0026lt;/h1\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; export default { props: [\u0026#39;msg\u0026#39;], const msg = props.msg } \u0026lt;/script\u0026gt; defineProps 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //我是子组件 \u0026lt;template\u0026gt; \u0026lt;h1\u0026gt; {{props.msg}}\u0026lt;/h1\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; // const props = defineProps\u0026lt;{ msg?: string, }\u0026gt;() ts写法 const props = defineProps({ // 写法一 // msg: String //写法二 msg: { type: String, default: \u0026#39;\u0026#39; } }) console.log(props.msg); \u0026lt;/script\u0026gt; emit 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 //父组件 \u0026lt;template\u0026gt; \u0026lt;ChildrenVue @myClick=\u0026#39;onMyClick\u0026#39; /\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; import ChildrenVue from \u0026#39;../components/Children.vue\u0026#39;; const onMyClick = (msg) =\u0026gt; { console.log(msg); } \u0026lt;/script\u0026gt; //子组件 \u0026lt;template\u0026gt; \u0026lt;button @click=\u0026#34;handleClick\u0026#34;\u0026gt;按钮\u0026lt;/button\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; import { defineEmits } from \u0026#39;vue\u0026#39; const emit = defineEmits([\u0026#39;myClick\u0026#39;]) const handleClick = () =\u0026gt; { emit(\u0026#39;myClick\u0026#39;, \u0026#39;我是子组件给父组件的\u0026#39;) } \u0026lt;/script\u0026gt; ref 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 //父组件 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;Childre ref=\u0026#39;children\u0026#39; /\u0026gt; \u0026lt;button @click=\u0026#34;getChild\u0026#34;\u0026gt;获取子组件的属性和方法\u0026lt;/button\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; import Children from \u0026#39;../components/Children.vue\u0026#39;; import { ref } from \u0026#39;vue\u0026#39; const children = ref(null) const getChild = () =\u0026gt; { console.log(children.value.title); children.value.toggle() } \u0026lt;/script\u0026gt; //子组件 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; 我是子组件 \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup\u0026gt; const title = \u0026#39;我是子组件的属性\u0026#39; const toggle = () =\u0026gt; { console.log(\u0026#39;我是子组件的方法\u0026#39;); } \u0026lt;/script\u0026gt; 通用 provide / inject 1 2 3 4 5 6 7 8 9 10 11 12 //父组件(传值组件) \u0026lt;script setup\u0026gt; import { provide } from \u0026#34;vue\u0026#34; provide(\u0026#34;name\u0026#34;, \u0026#34;lvxiaobu\u0026#34;) \u0026lt;/script\u0026gt; //子组件(接收组件) \u0026lt;script setup\u0026gt; import { inject } from \u0026#34;vue\u0026#34; const name = inject(\u0026#34;name\u0026#34;) console.log(name) // lvxiaobu \u0026lt;/script\u0026gt; pinia (推荐使用) / vuex Vuex和Pinia可以轻松实现组件通信\neventBus Vue3中移除了事件总线，但是可以借助于第三方工具来完成，Vue官方推荐mitt或tiny-emitter\n","permalink":"https://bablvsj.github.io/posts/tech/vue3/20230801-vue3-%E4%BC%A0%E5%8F%82%E6%96%B9%E5%BC%8F/","summary":"Vue3 常用传参方式 父子组件 props 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 //父组件 \u0026lt;template\u0026gt; \u0026lt;div\u0026gt; \u0026lt;ChildrenVue :msg=\u0026#39;msg\u0026#39; /\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/template\u0026gt; \u0026lt;script setup \u0026gt; import ChildrenVue from \u0026#39;../components/Children.vue\u0026#39;; import { ref } from \u0026#39;vue\u0026#39; const msg = ref(\u0026","title":"Vue3 常用传参方式"},{"content":" 让子弹飞（申遗！）\n阿甘正传（“我妈妈经常说，生活就像巧克力，你永远不知道下一颗是什么口味。”）\n初恋这件小事（这就是初恋的感觉）\n楚门的世界（“如果再不能见到你，祝你早安、午安、晚安”）\n当幸福来敲门（“不要让别人告诉你，你不能做什么！”）\n地道战（抗日人民的脑洞真的很大）\n闻香识女人（这部电影的台词真叫一个绝！）\n肖申克的救赎（经典不解释）\n放牛班的春天（天籁之音）\n蜘蛛侠 1 （没看过漫画，比较喜欢老版电影）\n机器人总动员（瓦力超会卖萌）\n怦然心动（两个人的视角来讲述一个青春故事）\n入殓师（没有令人不适的镜头，可以放心观看，治愈系）\n三傻大闹宝莱坞（人物冲突处理到极致）\n海上钢琴师（音乐很棒）\n夺宝奇兵系列（看敌人在耍大刀，无奈一枪放倒）\n钢铁侠 1 （个人认为漫威系列最佳）\n国王的演讲（带英国挺过二战的国王是个口吃，超长待机女王是他的长女）\n哈利波特 1 、2 （让我对魔法世界最有新鲜感的两部，后面就有点暗黑了）\n好想告诉你（电影+动画）\n黑客帝国系列（见证了两个导演从兄弟变为姐弟在变为姐妹）\n横空出世（“你愿意隐姓埋名一辈子吗？”）\n虎胆龙威系列（英文名Die hard超级贴切 喜欢布鲁斯威利斯被两头坑的无奈表情）\n歌舞青春 1 （歌挺好听的）\n环太平洋（音乐起！）\n回到未来系列（被致敬无数次的科幻经典）\n机器管家（一个想成为人类的机器人的人生）\n疾速追杀系列（“A fuxxing pencil!”）\n罗马假日(男女主颜值超高)\n玫瑰人生（ Edith Piaf 传记，喜欢她的歌可以看一看）\n七磅（片名出自威尼斯商人，主角的还“债”历程，同时也是自我的救赎）\n情书（光良的童话 MV 里面两个人看的那个电影，治愈系）\n速度与激情 3 （可能我是个异类？）\n天使爱美丽（色彩、音乐都很棒，文艺片）\n天堂电影院（一段忘年之交）\n头文字 D （“永远不要有跟人斗的心，你要赢的是你自己。”）\n我，机器人（威尔史密斯主演动作电影的入坑作，其他像黑衣人之类的也很棒）\n我是传奇 1 （有点丧尸版鲁滨逊漂流记的感觉）\n无间道（港版经典）\n西西里的美丽传说（又硬又难受，人言可畏）\n逍遥法外（又叫猫鼠游戏，小李子和汤姆汉克斯版）\n小鬼当家系列（脑洞超大，超搞笑）\n窈窕奶爸（罗宾威廉姆斯演技、口技超一流）\n云图（一旦看懂了，就挺妙）\n战争之王（点子超多的军火商的传奇故事）\n这个杀手不太冷（反差萌）\n终结者 2 （👍）\n最后的武士（挺悲壮的故事）\n宝莲灯（动画，个人认为已经逼近迪士尼水准了）\n暴力街区 Banlieue 13 （跑酷鼻祖大卫贝尔主演）\n变相怪杰（金凯瑞的脸简直就像橡皮泥）\n不能说的秘密（曲子都是精品）\n宫崎骏作品（我是有少女心？）：\n天空之城（入坑作，我一直感觉是映射侵华战争）\n龙猫（超可爱！）\n幽灵公主（又叫魔法少女，久石让作曲超美）\n魔女宅急便（我也想养一只黑猫）\n千与千寻（就挺奇幻的）\n哈尔的移动城堡（全程注意力在菜头上）\n周星驰主演的经典无厘头，和猫和老鼠一样，可以电视轮播偶尔看一眼：\n喜剧之王\n唐伯虎点秋香\n百变星君\n大话西游系列\n功夫\n国产凌凌漆\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 熟悉 JavaScript ，ES6 熟悉 web3 框架，etherjs 或 web3js 熟悉前端相关框架，了解 nodejs 工作流 了解 DOM 以及现代浏览器各种技术 熟悉 webgl ，three.js 加分 手写 HTML ，熟悉 CSS 编写，有一定审美 主动学习能力 [任职要求] 大学相关专业本科或研究生毕业 两年以上互联网 /web3 行业一线工作经验 英文文档阅读能力 熟悉 Linux ，熟悉开源，熟悉 git ，github ，pull request 工作流 有分布式办公经验，有独立解决问题的能力 有开源作品加分 发送简历请附带 github 地址 ","permalink":"https://bablvsj.github.io/posts/life/%E4%B8%80%E4%BA%9B%E5%80%BC%E5%BE%97%E4%B8%80%E7%9C%8B%E7%9A%84%E7%94%B5%E5%BD%B1/","summary":"让子弹飞（申遗！） 阿甘正传（“我妈妈经常说，生活就像巧克力，你永远不知道下一颗是什么口味。”） 初恋这件小事（这就是初恋的感觉） 楚门的世界（“","title":"一些值得一看的电影"},{"content":"![[Pasted image 20230728135404.png]]\n","permalink":"https://bablvsj.github.io/posts/life/helloworld/","summary":"![[Pasted image 20230728135404.png]]","title":"HelloWorld"},{"content":"个人说明 我是小布。\n2023，面朝大海，春暖花开！。 \u0026ndash;2022.12\n博客日志 2023-07-25: 引用hugo主题 PaperMod。\n2022-12-15: 引用hugo主题 hugo-theme-Reader。\n2022-12-10: 博客使用hugo构建。\n致谢 网站开发有借鉴 子舒 Kevin 两位的网站\n版权声明：网站文章所有版权如无特殊说明，均归本人所有。允许转载，标明出处即可。\n","permalink":"https://bablvsj.github.io/about/","summary":"about","title":"关于"},{"content":"记录我订阅的周刊，质量不错，内容挺有意思。如果你有推荐，欢迎在评论区分享。\n(以下排名不分先后，仅以记录的先后顺序。)\n周刊 1. DecoHack周刊\nhttps://decohack.zhubai.love/\n为独立创造者提供独立见解，帮助你发现新产品方向，启动和完善你的项目。\n2. 好工具周刊\nhttps://bestxtools.zhubai.love/\n发现并分享有趣，有创意，免费、好用的工具，每周四发布。\n3. 老胡的周刊\nhttps://weekly.howie6879.cn/\n每周记录看到的有价值的信息，主要针对计算机领域，内容主题极大程度被我个人喜好主导。这个项目核心目的在于记录让自己有印象的信息做一个留存以及共享。\n4. 前段精读周刊\nhttps://github.com/ascoders/weekly\n前端界的好文精读，每周更新。\n5. 科技爱好者周刊-阮一峰\nhttps://github.com/ruanyf/weekly\n记录每周值得分享的科技内容，周五发布。\n6. 开发者简报\nhttps://dev.com.cn/\n每周为你轻解读技术创业🚀、酷产品📱、编程语言👨‍💻、开发工具🛠️…等内容\n月刊 hellogithub - https://hellogithub.com/\n每月28号发布\n播客 枫言枫语\nhttps://fyfy.fm/\n听见科技与人文的声音 一档由开发者 @枫影JustinYan 和设计师 @自力hzlzh 主持的播客节目。\n","permalink":"https://bablvsj.github.io/weekly/","summary":"记录我订阅的周刊，质量不错，内容挺有意思。如果你有推荐，欢迎在评论区分享。 (以下排名不分先后，仅以记录的先后顺序。) 周刊 1. DecoHack周","title":"周刊"},{"content":"","permalink":"https://bablvsj.github.io/lab/","summary":"","title":"实验室"},{"content":"","permalink":"https://bablvsj.github.io/message/","summary":"","title":"留言"}]