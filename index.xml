<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lvsj&#39;s blog</title>
    <link>https://bablvsj.github.io/</link>
    <description>Recent content on Lvsj&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 16 Dec 2022 14:12:35 +0800</lastBuildDate><atom:link href="https://bablvsj.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些值得一看的电影</title>
      <link>https://bablvsj.github.io/home/%E4%B8%80%E4%BA%9B%E5%80%BC%E5%BE%97%E4%B8%80%E7%9C%8B%E7%9A%84%E7%94%B5%E5%BD%B1/</link>
      <pubDate>Fri, 16 Dec 2022 14:12:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/%E4%B8%80%E4%BA%9B%E5%80%BC%E5%BE%97%E4%B8%80%E7%9C%8B%E7%9A%84%E7%94%B5%E5%BD%B1/</guid>
      <description>阿甘正传（“我妈妈经常说，生活就像巧克力，你永远不知道下一颗是什么口味。”） 宝莲灯（动画，个人认为已经逼近迪士尼水准了） 暴力街区 Banlieue 13 （跑酷鼻</description>
    </item>
    
    <item>
      <title>async函数详解</title>
      <link>https://bablvsj.github.io/home/12-es7async%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/12-es7async%E5%87%BD%E6%95%B0%E8%AF%A6%E8%A7%A3/</guid>
      <description>备注： async/await 的内容还有待完善。 async/await （异步函数）概述 async/await 是在 ES7 中引入的新语法，可以更加方便地进行异步操作。 本质： Generator 的语法糖。 async 的返回值是 Promise 实例对象。 await</description>
    </item>
    
    <item>
      <title>ES5的一些扩展</title>
      <link>https://bablvsj.github.io/archives/es5%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95.html/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/archives/es5%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95.html/</guid>
      <description>JSON 对象 1、js对象(数组) &amp;ndash;&amp;gt; json对象(数组)： JSON.stringify(obj/arr) 2、json对象(数组) &amp;ndash;&amp;gt; js对象(数组)： JSON.parse(json) 上面这两个方法是ES5中提供的。 我们要记住</description>
    </item>
    
    <item>
      <title>ES5中的严格模式</title>
      <link>https://bablvsj.github.io/archives/es5%E4%B8%AD%E7%9A%84%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/archives/es5%E4%B8%AD%E7%9A%84%E4%B8%A5%E6%A0%BC%E6%A8%A1%E5%BC%8F.html/</guid>
      <description>ES 的几个重要版本 ES5 : 09 年发布。 ES6(ES2015) : 2015 年发布，也称为 ECMA2015。 ES7(ES2016) : 2016 年发布，也称为 ECMA2016 (变化不大)。 严格模式的理解 概念 理解：除了正常运行</description>
    </item>
    
    <item>
      <title>Es6的介绍和环境配置</title>
      <link>https://bablvsj.github.io/archives/es6%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/archives/es6%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%92%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.html/</guid>
      <description>前言 ECMAScript 简介 ES 的全称是 ECMAScript，它是由 ECMA 国际标准化组织 制定的一套脚本语言的标准化规范。 详细来说，ES 是由 ECMA 的第 39 号技术专家委员会（</description>
    </item>
    
    <item>
      <title>let、const和块级作用域</title>
      <link>https://bablvsj.github.io/archives/letconst%E5%92%8C%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F.html/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/archives/letconst%E5%92%8C%E5%9D%97%E7%BA%A7%E4%BD%9C%E7%94%A8%E5%9F%9F.html/</guid>
      <description>ES6 的变量声明 ES5 中，使用 var 定义全局变量（ var 是 variable 的简写）。 ES6 中，新增了 let 和 const 来定义变量： let：定义局部变量，替代 var。 const：定义常量（</description>
    </item>
    
    <item>
      <title>Promise的常见用法</title>
      <link>https://bablvsj.github.io/home/11-promise%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E5%92%8Capi/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/11-promise%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E5%92%8Capi/</guid>
      <description>链式调用：基于 Promise 处理多次 Ajax 请求【重要】 实际开发中，我们经常需要同时请求多个接口。比如说：在请求完接口1的数据data1之后，需要根据data</description>
    </item>
    
    <item>
      <title>Promise入门详解</title>
      <link>https://bablvsj.github.io/home/10-promise%E5%85%A5%E9%97%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/10-promise%E5%85%A5%E9%97%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>前言：异步和回调 异步 JavaScript 的执行环境是单线程。 所谓单线程，是指 JS 引擎中负责解释和执行 JavaScript 代码的线程只有一个，也就是一次只能完成一项任务，这个任务执</description>
    </item>
    
    <item>
      <title>Symbol</title>
      <link>https://bablvsj.github.io/home/es6symbol/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/es6symbol/</guid>
      <description>Symbol 概述 背景：ES5中对象的属性名都是字符串，容易造成重名，污染环境。 概念：ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它</description>
    </item>
    
    <item>
      <title>变量的解构赋值</title>
      <link>https://bablvsj.github.io/archives/%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC.html/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/archives/%E5%8F%98%E9%87%8F%E7%9A%84%E8%A7%A3%E6%9E%84%E8%B5%8B%E5%80%BC.html/</guid>
      <description>解构赋值的概念 解构赋值：ES6 允许我们，按照一一对应的方式，从数组或者对象中提取值，再将提取出来的值赋值给变量。 解构：分解数据结构；赋值：给</description>
    </item>
    
    <item>
      <title>箭头函数</title>
      <link>https://bablvsj.github.io/home/06-es6%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/06-es6%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0/</guid>
      <description>前言 ES6 在函数扩展方面，新增了很多特性。例如： 箭头函数 参数默认值 参数结构赋值 剩余参数 扩展运算符 this 绑定 尾调用 今天这篇文章，我们讲一下箭头函数。 箭</description>
    </item>
    
    <item>
      <title>内置对象扩展：set数据结构</title>
      <link>https://bablvsj.github.io/home/09-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E6%89%A9%E5%B1%95set%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/09-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E6%89%A9%E5%B1%95set%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>Set 数据结构 Set 数据结构的介绍 ES6 提供了 新的数据结构 Set。Set 类似于数组，但成员的值都是唯一的，没有重复的值。 Set 的应用有很多。比如，在 H5 页面的</description>
    </item>
    
    <item>
      <title>剩余参数和扩展运算符</title>
      <link>https://bablvsj.github.io/home/07-%E5%89%A9%E4%BD%99%E5%8F%82%E6%95%B0%E5%92%8C%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/07-%E5%89%A9%E4%BD%99%E5%8F%82%E6%95%B0%E5%92%8C%E6%89%A9%E5%B1%95%E8%BF%90%E7%AE%97%E7%AC%A6/</guid>
      <description>剩余参数 剩余参数允许我们将不确定数量的剩余的元素放到一个数组中。 比如说，当函数的实参个数大于形参个数时，我们可以将剩余的实参放到一个数组中。</description>
    </item>
    
    <item>
      <title>字符串、数组、对象的扩展</title>
      <link>https://bablvsj.github.io/home/08-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 22 Nov 2022 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/home/08-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>字符串的扩展 下面提到的字符串的几个方法，更详细的内容，可以看《04-JavaScript 基础/内置对象 String：字符串的常见方法.md》</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://bablvsj.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bablvsj.github.io/about/</guid>
      <description>个人说明 我是小布。 这是一个我在闲暇时间写的博客，记录一些生活琐事，也会写一些技术笔记。 欢迎和我一起探讨一些问题，或者聊聊人生与想。 the road ahead will be</description>
    </item>
    
    <item>
      <title>留言</title>
      <link>https://bablvsj.github.io/message/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bablvsj.github.io/message/</guid>
      <description></description>
    </item>
    
    <item>
      <title>实验室</title>
      <link>https://bablvsj.github.io/lab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bablvsj.github.io/lab/</guid>
      <description></description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://bablvsj.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bablvsj.github.io/search/</guid>
      <description></description>
    </item>
    
    <item>
      <title>周刊</title>
      <link>https://bablvsj.github.io/weekly/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bablvsj.github.io/weekly/</guid>
      <description>记录我订阅的周刊，质量不错，内容挺有意思。如果你有推荐，欢迎在评论区分享。 (以下排名不分先后，仅以记录的先后顺序。) 周刊 1. DecoHack周</description>
    </item>
    
  </channel>
</rss>
