<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>面试题集 on Bablvsj&#39;s Blog</title>
    <link>https://bablvsj.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98%E9%9B%86/</link>
    <description>Recent content in 面试题集 on Bablvsj&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 01 Apr 2020 17:11:35 +0800</lastBuildDate><atom:link href="https://bablvsj.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98%E9%9B%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>HTTP协议</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/04-http%E5%8D%8F%E8%AE%AE/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/04-http%E5%8D%8F%E8%AE%AE/</guid>
      <description>前言 一面要讲的内容： HTTP协议的主要特点 HTTP报文的组成部分 HTTP方法 get 和 post的区别 HTTP状态码 什么是持久连接 什么是管线化 二面要</description>
    </item>
    
    <item>
      <title>js运行机制：异步和单线程</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/09-js%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E5%BC%82%E6%AD%A5%E5%92%8C%E5%8D%95%E7%BA%BF%E7%A8%8B/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/09-js%E8%BF%90%E8%A1%8C%E6%9C%BA%E5%88%B6%E5%BC%82%E6%AD%A5%E5%92%8C%E5%8D%95%E7%BA%BF%E7%A8%8B/</guid>
      <description>JS的异步和单线程 题目一：异步 现有如下代码： 1 2 3 4 5 6 7 console.log(1); setTimeout(function () { console.log(2); }, 1000); console.log(3); console.log(4); // 我们很容易知道，打印的顺序是`1，3，4，2` 可如果我把延时的</description>
    </item>
    
    <item>
      <title>MVVM</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/mvvm/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/mvvm/</guid>
      <description>前言 MVVM的常见问题： 如何理解MVVM 如何实现MVVM 是否解读过Vue的源码 题目： 说一下使用 jQuery 和使用框架的区别 说一下对 MVVM 的理解 vue 中如何实现</description>
    </item>
    
    <item>
      <title>z-推荐文章</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/z-%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/z-%E6%8E%A8%E8%8D%90%E6%96%87%E7%AB%A0/</guid>
      <description>征服JavaScript面试系列 | 众城翻译 征服 JavaScript 面试：什么是闭包？ 征服 JavaScript 面试：什么是函数组合 征服JavaScript面试系列：类继承和原型继</description>
    </item>
    
    <item>
      <title>安全问题：CSRF和XSS</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/07-%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98csrf%E5%92%8Cxss/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/07-%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98csrf%E5%92%8Cxss/</guid>
      <description>CSRF 基本概念、缩写、全称 CSRF（Cross-site request forgery）：跨站请求伪造。 PS：中文名一定要记住 CSRF的攻击原理 用户是网站A的</description>
    </item>
    
    <item>
      <title>算法问题</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/08-%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/08-%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98/</guid>
      <description>排序 上面的排序这么多，我们要记住下面这三个： 快速排序：https://segmentfault.com/a/1190000009426421</description>
    </item>
    
    <item>
      <title>虚拟DOM</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E8%99%9A%E6%8B%9Fdom/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E8%99%9A%E6%8B%9Fdom/</guid>
      <description>前言 vdom 是 vue 和 React 的核心，先讲哪个都绕不开它。 vdom 比较独立，使用也比较简单。 如果面试问到 vue 和 React 和实现，免不了问 vdom： vdom 是什么？为何会存在 vdo</description>
    </item>
    
    <item>
      <title>跨域通信类</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/06-%E8%B7%A8%E5%9F%9F%E9%80%9A%E4%BF%A1%E7%B1%BB/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/06-%E8%B7%A8%E5%9F%9F%E9%80%9A%E4%BF%A1%E7%B1%BB/</guid>
      <description>同源策略的概念和具体限制 同源策略：限制从一个源加载的文档或脚本如何与来自另一个源的资源进行交互。这是一个用于隔离潜在恶意文件的关键的安全机制</description>
    </item>
    
    <item>
      <title>钉钉面试</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%92%89%E9%92%89%E9%9D%A2%E8%AF%95/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%92%89%E9%92%89%E9%9D%A2%E8%AF%95/</guid>
      <description>基础知识主要包含以下几个方面： 基础：计算机原理、编译原理、数据结构、算法、设计模式、编程范式等基本知识了解 语法：JavaScript、ECM</description>
    </item>
    
    <item>
      <title>面向对象：类的定义和继承的几种方式</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/05-02.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%BB%A7%E6%89%BF%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/05-02.%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%BB%A7%E6%89%BF%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</guid>
      <description>前言 类与实例： 类的声明 生成实例 类与继承： 如何实现继承：继承的本质就是原型链 继承的几种方式 类的定义、实例化 类的定义/类的声明 方式一：用构造函数</description>
    </item>
    
    <item>
      <title>面经链接推荐</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E7%BB%8F%E9%93%BE%E6%8E%A5%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E7%BB%8F%E9%93%BE%E6%8E%A5%E6%8E%A8%E8%8D%90/</guid>
      <description>2018-01-25 有时在面试时，我都替候选人着急——候选人完全可以在面试前准备 2018-01-26 转眼人到中年：前端老程序员无法忘怀的一次百度电话面试 八年前的面经，咋记得这么</description>
    </item>
    
    <item>
      <title>面试题整理</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%95%B4%E7%90%86/</guid>
      <description>JavaScript 存储相关：请描述以下cookie、localStorage、sessionStorage的区别 在H5之前，cookie一直都是本地存储的一</description>
    </item>
    
    <item>
      <title>页面性能优化</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/10-%E9%A1%B5%E9%9D%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/10-%E9%A1%B5%E9%9D%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
      <description>1. 资源压缩合并，减少http请求 合并图片（css sprites）、CSS和JS文件合并、CSS和JS文件压缩 图片较多的页面也可以使用 lazyLoad 等技术</description>
    </item>
    
    <item>
      <title>comprehensive</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/comprehensive/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/comprehensive/</guid>
      <description>对前端工程师这个职位是怎么样理解的？它的前景会怎么样？ 前端是最贴近用户的程序员，比后端、数据库、产品经理、运营、安全都近 实现界面交互 提升用户</description>
    </item>
    
    <item>
      <title>cookie</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/cookie/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/cookie/</guid>
      <description>请你谈谈Cookie的弊端 cookie虽然在持久保存客户端数据提供了方便，分担了服务器存储的负担，但还是有很多局限性的 第一：每个特定的域名下</description>
    </item>
    
    <item>
      <title>CSS</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/css/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/css/</guid>
      <description>CSS display: none; 与 visibility: hidden; 的区别 联系：它们都能让元素不可见 区别： display:none;会让元素完全从渲染树中消失，渲染的时候不占据任何空间；visib</description>
    </item>
    
    <item>
      <title>localStorage</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/localstorage/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/localstorage/</guid>
      <description>浏览器本地存储 在较高版本的浏览器中，js提供了sessionStorage和globalStorage。在HTML5中提供了localSto</description>
    </item>
    
    <item>
      <title>MVC</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/mvc/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/mvc/</guid>
      <description>说说你对MVC和MVVM的理解 MVC View 传送指令到 Controller Controller 完成业务逻辑后，要求 Model 改变状态 Model 将新的数据发送到 View，用户得到反馈 所有通信都是单向的</description>
    </item>
    
    <item>
      <title>SEO</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/seo/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/seo/</guid>
      <description>前端需要注意哪些SEO 合理的title、description、keywords：搜索对着三项的权重逐个减小，title值强调重点即可，重要</description>
    </item>
    
    <item>
      <title>vue</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue/</guid>
      <description>什么是mvvm？ MVVM是Model-View-ViewModel的缩写。mvvm是一种设计思想。Model 层代表数据模型，也可以在Mode</description>
    </item>
    
    <item>
      <title>web安全</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/web-security/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/web-security/</guid>
      <description>常见web安全及防护原理 sql注入原理 就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的</description>
    </item>
    
    <item>
      <title>其他问题</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/other/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/other/</guid>
      <description>如何评价AngularJS和BackboneJS backbone具有依赖性，依赖underscore.js。Backbone + Underscore + jQuery(or Zept</description>
    </item>
    
    <item>
      <title>创建对象和原型链</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/12%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/12%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1%E5%92%8C%E5%8E%9F%E5%9E%8B%E9%93%BE/</guid>
      <description>1 前言 1.1 面向对象的三大特性 封装 继承 多态 1.2 原型链的知识 原型链是面向对象的基础，是非常重要的部分。有以下几种知识： 创建对象有几种方法 原型、构造函</description>
    </item>
    
    <item>
      <title>如何解决跨域问题</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/cross-domain/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/cross-domain/</guid>
      <description>如何解决跨域问题 JSONP： 原理是：动态插入script标签，通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url</description>
    </item>
    
    <item>
      <title>安全问题：CSRF和XSS</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/11%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98csrf%E5%92%8Cxss/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/11%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98csrf%E5%92%8Cxss/</guid>
      <description>1 前言 面试中的安全问题，明确来说，就两个方面： CSRF：基本概念、攻击方式、防御措施 XSS：基本概念、攻击方式、防御措施 这两个问题，一般不会</description>
    </item>
    
    <item>
      <title>性能</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E6%80%A7%E8%83%BD/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E6%80%A7%E8%83%BD/</guid>
      <description>一、网络相关 1.1 DNS 预解析 DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP 1 &amp;lt;link rel=&amp;#34;dns-prefetch&amp;#34; href=&amp;#34;//yuchengkai.cn&amp;#34;&amp;gt; 1.2 缓存 缓存对于前端性能优化来说是个很重要的点</description>
    </item>
    
    <item>
      <title>模块化</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/modules/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/modules/</guid>
      <description>说说你对AMD和Commonjs的理解 CommonJS是服务器端模块的规范，Node.js采用了这个规范。CommonJS规范加载模块是同步</description>
    </item>
    
    <item>
      <title>浏览器</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E6%B5%8F%E8%A7%88%E5%99%A8/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E6%B5%8F%E8%A7%88%E5%99%A8/</guid>
      <description>二、跨域 因为浏览器出于安全考虑，有同源策略。也就是说，如果协议、域名或者端口有一个不同就是跨域，Ajax 请求会失败 2.1 JSONP JSONP 的原理很简单，就是利</description>
    </item>
    
    <item>
      <title>线程与进程的区别</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/computer-basic-knowledge/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/computer-basic-knowledge/</guid>
      <description>线程与进程的区别 一个程序至少有一个进程，一个进程至少有一个线程 线程的划分尺度小于进程，使得多线程程序的并发性高 进程在执行过程中拥有独立的内存</description>
    </item>
    
    <item>
      <title>面试题精简版本</title>
      <link>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%B2%BE%E7%AE%80%E7%89%88%E6%9C%AC/</link>
      <pubDate>Wed, 01 Jan 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/temp/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/%E9%9D%A2%E8%AF%95%E9%A2%98%E7%B2%BE%E7%AE%80%E7%89%88%E6%9C%AC/</guid>
      <description>一、CSS相关 1.1 左边定宽，右边自适应方案：float + margin，float + calc 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* 方案1 */ .left { width: 120px; float: left; }</description>
    </item>
    
  </channel>
</rss>
