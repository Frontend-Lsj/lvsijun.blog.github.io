<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>每天一道面试题 on Bablvsj&#39;s Blog</title>
    <link>https://bablvsj.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
    <description>Recent content in 每天一道面试题 on Bablvsj&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 24 Aug 2023 16:46:19 +0800</lastBuildDate><atom:link href="https://bablvsj.github.io/tags/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>深浅拷贝</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230823-%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</link>
      <pubDate>Thu, 24 Aug 2023 16:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230823-%E6%B7%B1%E6%B5%85%E6%8B%B7%E8%B4%9D/</guid>
      <description>概念 浅拷贝： 1.创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝。 2.如果属性是基本类型，拷贝的就是基本类型的值。 3.如果属性是引用</description>
    </item>
    
    <item>
      <title>简述原型、原型链、(原型)继承</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%AE%80%E8%BF%B0%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%8E%9F%E5%9E%8B%E7%BB%A7%E6%89%BF/</link>
      <pubDate>Wed, 23 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%AE%80%E8%BF%B0%E5%8E%9F%E5%9E%8B%E5%8E%9F%E5%9E%8B%E9%93%BE%E5%8E%9F%E5%9E%8B%E7%BB%A7%E6%89%BF/</guid>
      <description>什么是原型 任何对象实例都有一个原型，也叫原型对象，这个原型对象由对象的内置属性_proto_指向它的构造函数的 prototype 指向的对象，即任何对象都是由</description>
    </item>
    
    <item>
      <title>JS基础</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/js%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 16 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/js%E5%9F%BA%E7%A1%80/</guid>
      <description>1.判断数据类型 typeof 1 2 3 4 5 6 7 8 9 10 typeof &amp;#39;seymoe&amp;#39; // &amp;#39;string&amp;#39; typeof true // &amp;#39;boolean&amp;#39; typeof 10 // &amp;#39;number&amp;#39; typeof Symbol() // &amp;#39;symbol&amp;#39; typeof null // &amp;#39;object&amp;#39; `无法判定是否为 null ` typeof undefined // &amp;#39;undefined&amp;#39; typeof {} // &amp;#39;object&amp;#39; typeof [] // &amp;#39;object&amp;#39; typeof(() =&amp;gt; {}) // &amp;#39;function&amp;#39; 弊端： null</description>
    </item>
    
    <item>
      <title>Css库</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/css/</link>
      <pubDate>Tue, 15 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/css/</guid>
      <description>1.css 选择器 CSS选择器包括行内样式、id选择器、class选择器、标签选择器，优先级依次降低，!important可用于优先级提升，比行内样式</description>
    </item>
    
    <item>
      <title>事件循环机制</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Mon, 14 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF%E6%9C%BA%E5%88%B6/</guid>
      <description>事件循环概念 JavaScript代码的执行过程中，除了依靠函数调用栈来限制函数的执行顺序外，还要依靠任务队列(task queue)来约束其它</description>
    </item>
    
    <item>
      <title>真正理解Promise</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230814-%E7%9C%9F%E6%AD%A3%E7%90%86%E8%A7%A3promise/</link>
      <pubDate>Mon, 14 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230814-%E7%9C%9F%E6%AD%A3%E7%90%86%E8%A7%A3promise/</guid>
      <description>源码实现 基础功能 1 2 3 4 5 6 7 8 9 10 const p = new Promise((resolve, reject) =&amp;gt; { resolve(&amp;#39;fulfilled&amp;#39;) reject(&amp;#39;rejected&amp;#39;) }) p.then(value=&amp;gt;{ consolo.log(value) },reason=&amp;gt;{ console.log(reason) }) new Promise 的实现原理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29</description>
    </item>
    
    <item>
      <title>Css题库</title>
      <link>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/01-css-%E9%A2%98%E5%BA%93/</link>
      <pubDate>Mon, 07 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/01-css-%E9%A2%98%E5%BA%93/</guid>
      <description>1. 重绘与重排的区别 重绘：更换背景色 重排/回流：隐藏删除元素，页面dom重新渲染，重新生成布局，重新排列元素，非常影响性能。 『重绘』不一定会出</description>
    </item>
    
    <item>
      <title>reactive与ref的区别</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230810-reactive%E4%B8%8Eref%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Mon, 07 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/20230810-reactive%E4%B8%8Eref%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>在Vue 3中，reactive和ref是用于创建响应式数据的两种不同方式。 reactive函数用于将一个普通的JavaScript对象转换为</description>
    </item>
    
    <item>
      <title>TS面试题</title>
      <link>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/ts/</link>
      <pubDate>Mon, 07 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/%E6%AF%8F%E5%A4%A9%E4%B8%80%E9%81%93%E9%9D%A2%E8%AF%95%E9%A2%98/ts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Vue3 知识点</title>
      <link>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue3-%E7%9F%A5%E8%AF%86%E7%82%B9/</link>
      <pubDate>Mon, 07 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/vue3-%E7%9F%A5%E8%AF%86%E7%82%B9/</guid>
      <description>你知道Vue3.x响应式数据原理吗？ Vue3.x改用Proxy替代Object.defineProperty。 因为Proxy可以直接监听对象</description>
    </item>
    
    <item>
      <title>面试题列表</title>
      <link>https://bablvsj.github.io/posts/interview/temp-question-list/</link>
      <pubDate>Mon, 07 Aug 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/interview/temp-question-list/</guid>
      <description>你讲一下vue双向绑定的原理 讲一下vue3相比vue2，它在diff算法上做了哪些优化？ Vue2为什么要对数组的常用方法进行重写？ Vue的n</description>
    </item>
    
    <item>
      <title>面试题库</title>
      <link>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/1.%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BA%93/</link>
      <pubDate>Wed, 01 Apr 2020 17:11:35 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/wait/14-%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95/1.%E9%9D%A2%E8%AF%95%E9%A2%98%E5%BA%93/</guid>
      <description>1、http 和 https 的基本概念 http: 是一个客户端和服务器端请求和应答的标准（TCP），用于从 WWW 服务器传输超文本到本地浏览器的超文本传输协议。 http</description>
    </item>
    
  </channel>
</rss>
