<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>标签2 on Bablvsj&#39;s Blog</title>
    <link>https://bablvsj.github.io/tags/%E6%A0%87%E7%AD%BE2/</link>
    <description>Recent content in 标签2 on Bablvsj&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 25 Jul 2023 13:46:19 +0800</lastBuildDate><atom:link href="https://bablvsj.github.io/tags/%E6%A0%87%E7%AD%BE2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> 字符串的扩展</title>
      <link>https://bablvsj.github.io/posts/tech/es6/08-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/es6/08-%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%95%B0%E7%BB%84%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%89%A9%E5%B1%95/</guid>
      <description>字符串的扩展 下面提到的字符串的几个方法，更详细的内容，可以看《04-JavaScript 基础/内置对象 String：字符串的常见方法.md》</description>
    </item>
    
    <item>
      <title>ES5中对象的属性</title>
      <link>https://bablvsj.github.io/posts/tech/es6/es6symbol/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/es6/es6symbol/</guid>
      <description>Symbol 概述 背景：ES5中对象的属性名都是字符串，容易造成重名，污染环境。 概念：ES6 引入了一种新的原始数据类型Symbol，表示独一无二的值。它</description>
    </item>
    
    <item>
      <title>Set 数据结构</title>
      <link>https://bablvsj.github.io/posts/tech/es6/09-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E6%89%A9%E5%B1%95set%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/es6/09-%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E6%89%A9%E5%B1%95set%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</guid>
      <description>Set 数据结构 Set 数据结构的介绍 ES6 提供了 新的数据结构 Set。Set 类似于数组，但成员的值都是唯一的，没有重复的值。 Set 的应用有很多。比如，在 H5 页面的</description>
    </item>
    
    <item>
      <title>异步和回调</title>
      <link>https://bablvsj.github.io/posts/tech/es6/10-promise%E5%85%A5%E9%97%A8%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/es6/10-promise%E5%85%A5%E9%97%A8%E8%AF%A6%E8%A7%A3/</guid>
      <description>前言：异步和回调 异步 JavaScript 的执行环境是单线程。 所谓单线程，是指 JS 引擎中负责解释和执行 JavaScript 代码的线程只有一个，也就是一次只能完成一项任务，这个任务执</description>
    </item>
    
    <item>
      <title>模板</title>
      <link>https://bablvsj.github.io/posts/blog/firstblog/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/blog/firstblog/</guid>
      <description>1、var 声明的变量会挂载在 window 对象上，而 let 和 const 声明的变量不会 举例： var a = &#39;我是a&#39;; console.log(a); // 打印结果：我是a console.log(window.a); // 打印结果：我是a let b = &#39;我是b&#39;</description>
    </item>
    
    <item>
      <title>链式调用</title>
      <link>https://bablvsj.github.io/posts/tech/es6/11-promise%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E5%92%8Capi/</link>
      <pubDate>Tue, 25 Jul 2023 13:46:19 +0800</pubDate>
      
      <guid>https://bablvsj.github.io/posts/tech/es6/11-promise%E7%9A%84%E5%B8%B8%E8%A7%81%E7%94%A8%E6%B3%95%E5%92%8Capi/</guid>
      <description>链式调用：基于 Promise 处理多次 Ajax 请求【重要】 实际开发中，我们经常需要同时请求多个接口。比如说：在请求完接口1的数据data1之后，需要根据data</description>
    </item>
    
  </channel>
</rss>
